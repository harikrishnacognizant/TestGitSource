/**
 * Copyright (c) 2011, salesforce.com, inc.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification, are permitted provided
 * that the following conditions are met:
 *
 *    Redistributions of source code must retain the above copyright notice, this list of conditions and the
 *    following disclaimer.
 *
 *    Redistributions in binary form must reproduce the above copyright notice, this list of conditions and
 *    the following disclaimer in the documentation and/or other materials provided with the distribution.
 *
 *    Neither the name of salesforce.com, inc. nor the names of its contributors may be used to endorse or
 *    promote products derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A
 * PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
 * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

package com.force.sdk.codegen.injector;

import java.util.List;

import com.force.sdk.codegen.ForceJPAClassGeneratorUtils;
import com.force.sdk.codegen.template.Template;
import com.sforce.soap.partner.DescribeSObjectResult;
import com.sforce.soap.partner.Field;
import com.sforce.soap.partner.GetUserInfoResult;

/**
 * A {@link TemplateInjector} that injects data to generate Java classes which conform to
 * the Force.com JPA implementation.
 * <p>
 * The files generated by this {@code TemplateInjector} will also use the JPA class hierarchy
 * conveniently defined by the Force.com JPA implementation
 * (see {@link com.force.sdk.jpa.model.BaseForceObject}, {@link com.force.sdk.jpa.model.BaseForceStandardObject}
 * and {@link com.force.sdk.jpa.model.BaseForceCustomObject}).
 * 
 * @author Tim Kral
 */
public class ForceJPAClassTemplateInjector implements TemplateInjector {

    // Allow a static package name (as opposed to a dynamically
    // generated package name)
    private String packageName;
    
    /**
     * Sets the Java package name under which Java JPA classes
     * are to be generated.
     * 
     * @param packageName a non {@code null} {@code String} which conforms
     *                    to Java package naming standards
     * @see ForceJPAClassGeneratorUtils#constructPackageName(GetUserInfoResult)
     * @see com.force.sdk.codegen.writer.ForceJPAFileWriterProvider#setPackageName(String)
     */
    public void setPackageName(String packageName) {
        this.packageName = packageName;
    }
    
    @Override
    public void inject(GetUserInfoResult userInfo, DescribeSObjectResult dsr, List<Field> fieldList, Template template) {
        if (packageName != null) {
            template.injectView("packageName", packageName);
        } else {
            template.injectView("packageName", ForceJPAClassGeneratorUtils.constructPackageName(userInfo));
        }
        
        template.injectView("userInfo", userInfo);
        template.injectView("objectInfo", dsr);
        template.injectView("fields", fieldList);
    }
}
